{"version":3,"sources":["App/Componets/Form/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["axios","require","Form","useState","email","setEmail","password","setPassword","checkBox","setCheckBox","msg","setMsg","class","onSubmit","event","message","preventDefault","checkEmail","test","validateEmail","trim","post","then","response","data","catch","error","name","LoginApi","className","onChange","e","target","value","type","checked","for","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEMA,EAAQC,EAAQ,IAmGPC,MAjGf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAAsBN,mBAAS,IAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KAuDA,OACE,qBAAKC,MAAM,OAAX,SACE,qBAAKA,MAAM,YAAX,SAEE,uBAAMC,SAvBO,SAACC,GAElB,IAAIC,EADJD,EAAME,iBAEN,IAAIC,EARgB,SAACb,GAErB,MADe,uJACDc,KAAKd,GAMFe,CAAcf,GAEV,KAAjBA,EAAMgB,QAAqC,KAApBd,EAASc,OAClCL,EAAU,kCACgB,KAAjBX,EAAMgB,OACfL,EAAU,kBACc,IAAfE,EACTF,EAAU,yBACmB,KAApBT,EAASc,OAClBL,EAAU,qBACc,IAAfE,GAAuBX,IAChCS,EAAU,kDAhDG,SAACX,EAAOE,EAAUE,GAC5BJ,GAAUE,EAEJF,GAASE,GAClBN,EAAMqB,KAAK,kCAAmC,CAC5CjB,MAAOA,EACPE,SAAUA,IAETgB,MAAK,SAAUC,GACVA,EAASC,KAIXb,EAAOY,EAASC,MAEhBb,EAAO,+CAGVc,OAAM,SAAUC,GACXA,EAAMC,KACRhB,EAAO,UAAYe,EAAMX,SAEzBJ,EAAO,8CApBbA,EAAO,0BA+CPiB,CAASxB,EAAOE,IAChBK,EAAOI,IAOL,UACE,oBAAIc,UAAU,YAAd,qBAEA,mBAAGA,UAAU,qBAAb,SAAmCnB,IAEnC,mBAAGmB,UAAU,uBAAb,oBACA,uBAAOC,SAAU,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,OAAOC,QACtCJ,UAAU,YAAYK,KAAK,OAAOP,KAAK,UACzC,mBAAGE,UAAU,uBAAb,uBACA,uBAAOC,SAAU,SAAAC,GAAC,OAAIxB,EAAYwB,EAAEC,OAAOC,QACzCJ,UAAU,YAAYK,KAAK,WAAWP,KAAK,aAC7C,gCACE,uBAAOA,KAAK,WAAWO,KAAK,WAC1BC,QAAS3B,EACTsB,SAAU,SAACC,GAAD,OAAOtB,EAAYsB,EAAEC,OAAOG,YACxC,uBAAOC,IAAI,WAAX,4BAGF,wBAAQP,UAAU,yBAAlB,qBAEA,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,sBAAb,SAAmC,mBAAGA,UAAU,aAAaQ,KAAK,IAA/B,qCACnC,oBAAGR,UAAU,gCAAb,mCAAmE,mBAAGA,UAAU,aAAaQ,KAAK,IAA/B,wBACnE,mBAAGR,UAAU,sBAAb,SAAmC,mBAAGA,UAAU,aAAaQ,KAAK,IAA/B,oD,MChFhCC,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCKSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18c67f02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Form.css';\nconst axios = require('axios');\n\nfunction Form() {\n  // States for Form Input\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [checkBox, setCheckBox] = useState(false)\n  // Display message on actions\n  const [msg, setMsg] = useState(\"\")\n  // API call to retrive user submission \n  const LoginApi = (email, password, checkBox) => {\n    if (!email || !password) {\n      setMsg(\"Invalid user creditals\")\n    } else if (email && password) {\n      axios.post('http://localhost:8000/api/login', {\n        email: email,\n        password: password\n      })\n        .then(function (response) {\n          if (response.data) {\n            if (checkBox === true) {\n              // set Session\n            }\n            setMsg(response.data)\n          } else {\n            setMsg(\"There were issue retriving the user info\")\n          }\n        })\n        .catch(function (error) {\n          if (error.name) {\n            setMsg(\"Error: \" + error.message)\n          } else {\n            setMsg(\"There were issue submiting your request\")\n          }\n        });\n    }\n  }\n  // Validate email for proper email format\n  // https://stackoverflow.com/questions/52188192/what-is-the-simplest-and-shortest-way-for-validating-an-email-in-react\n  const validateEmail = (email) => {\n    const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n  }\n  // Submit Form on Click\n  const submitForm = (event) => {\n    event.preventDefault();\n    let message;\n    let checkEmail = validateEmail(email)\n    // Error Check for Email and Password staus\n    if (email.trim() === \"\" && password.trim() === \"\") {\n      message = \"Email and Password are required\"\n    } else if (email.trim() === \"\") {\n      message = \"Email required\"\n    } else if (checkEmail === false) {\n      message = \"Incorrect email format\"\n    } else if (password.trim() === \"\") {\n      message = \"Password required\"\n    } else if (checkEmail === true && password) {\n      message = \"Email and Password are good - Signing in (3sec)\"\n      LoginApi(email, password, checkBox)\n    } setMsg(message)\n  }\n  // Render\n  return (\n    <div class=\"card\">\n      <div class=\"container\">\n        {/* Form */}\n        <form onSubmit={submitForm}>\n          <h2 className=\"textAlign\">Sign in</h2>\n          {/* Error Message */}\n          <p className=\"marginY1 textAlign\">{msg}</p>\n          {/* Form Input fields */}\n          <p className=\"marginYno boldLabels\">Email:</p>\n          <input onChange={e => setEmail(e.target.value)}\n            className=\"inputForm\" type=\"text\" name=\"email\" />\n          <p className=\"marginYno boldLabels\">Password:</p>\n          <input onChange={e => setPassword(e.target.value)}\n            className=\"inputForm\" type=\"password\" name=\"password\" />\n          <div>\n            <input name=\"checkBox\" type=\"checkbox\"\n              checked={checkBox}\n              onChange={(e) => setCheckBox(e.target.checked)} />\n            <label for=\"checkBox\"> Rember me?</label>\n          </div>\n          {/* Form Submit Button */}\n          <button className=\"inputForm submitButton\">Sign in</button>\n          {/* Additonal section for register and forgot links */}\n          <div className=\"paddingY1\">\n            <p className=\"marginYno textAlign\"><a className=\"boldLabels\" href=\"#\">Forgot your password?</a></p>\n            <p className=\"marginYno textAlign paddingY1\">Dont have an account? <a className=\"boldLabels\" href=\"#\">Sign up</a></p>\n            <p className=\"marginYno textAlign\"><a className=\"boldLabels\" href=\"#\">Resend email confirmation</a></p>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","\nimport Form from './Componets/Form'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}